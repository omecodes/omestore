swagger: "2.0"
info:
  description: "This is the Fire x server API specification"
  version: "0.0.1"
  title: "Sagger Fire x"
  termsOfService: "https://omestoreio.com/terms/"
  contact:
    email: "omecodes@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "127.0.0.1"
basePath: "/"
tags:
  - name: "data"
    description: "C.R.U.D api"
  - name: "grafts"
    description: "Enrich documents with graft objects"
  - name: "users"
    description: "User management"
schemes:
  - "https"
  - "http"

paths:
  /{collection}/{id}:
    parameters:
      - in: path
        name: "collection"
        required: true
        type: string
        description: "Collection name"
      - in: path
        name: "id"
        required: true
        type: string
        description: "document id"
    put:
      tags:
        - "data"
      summary: "Add a new JSON document to the store"
      operationId: "PutData"
      security:
        - basic: []
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          schema:
            type: object
      responses:
        "400":
          description: "Invalid input"
        "403":
          description: "You are not authorized to create a document"
    patch:
      tags:
        - "data"
      summary: "Patch a document"
      description: ""
      operationId: "ModifyData"
      security:
        - basic: [ ]
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          schema:
            type: object
        - in: query
          required: true
          type: string
          name: path
      responses:
        "400":
          description: "Bad input"
        "403":
          description: "You are not allowed to edit this document"
        "404":
          description: "Document not found"
    get:
      tags:
        - "data"
      summary: "Get a document"
      description: ""
      operationId: "GetDaata"
      security:
        - basic: [ ]
      produces:
        - "application/json"
      parameters:
        - in: query
          type: boolean
          name: info
      responses:
        "403":
          description: "You are not authorized to read this document"
        "404":
          description: "Document not found"
    delete:
      tags:
        - "data"
      summary: "Delete a document"
      description: ""
      operationId: "DeleteData"
      security:
        - basic: [ ]
      produces:
        - "application/json"
      responses:
        "403":
          description: "You are not authorized to delete this document"
        "404":
          description: "Document not found"
  /{collection}:
    parameters:
      - in: path
        name: "collection"
        required: true
        type: string
        description: "Collection name"
    get:
      tags:
        - "data"
      summary: "Get documents list"
      description: ""
      operationId: "GetDataList"
      security:
        - basic: [ ]
      produces:
        - "application/json"
      responses:
        "403":
          description: "You are not allowed to get documents"
        "404":
          description: "Collection not found"
  /.collections:
    get:
      tags:
        - "data"
      summary: "List all collections"
      description: ""
      operationId: "GetCollections"
      security:
        - basic: [ ]
      produces:
        - "application/json"
      responses:
        "403":
          description: "You are not authorized to read this document"
        "404":
          description: "Document not found"
  /.graft/{collection}/{data}:
    parameters:
      - in: path
        name: "collection"
        required: true
        type: string
        description: "Collection name"
      - in: path
        name: "data"
        required: true
        type: string
        description: "document id"
    put:
      tags:
        - "grafts"
      summary: "Create a graft for a document"
      operationId: "CreateGraft"
      security:
        - basic: [ ]
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          schema:
            type: object
      responses:
        "400":
          description: "Invalid input"
        "403":
          description: "You are not allowed to create a document graft"
        "404":
          description: "Document not found"
    get:
      tags:
        - "grafts"
      summary: "List document grafts"
      operationId: "ListGrafts"
      security:
        - basic: [ ]
      produces:
        - "application/json"
      responses:
        "404":
          description: "Document not found"
        "403":
          description: "You are not allowed to get document grafts"
  /.graft/{collection}/{data}/{id}:
    parameters:
      - in: path
        name: "collection"
        required: true
        type: string
        description: "Collection name"
      - in: path
        name: "data"
        required: true
        type: string
        description: "document id"
      - in: path
        name: "id"
        required: true
        type: string
        description: "graft id"
    get:
      tags:
        - "grafts"
      summary: "Get graft"
      operationId: "GetGraft"
      security:
        - basic: [ ]
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "404":
          description: "Document or graft not found"
        "403":
          description: "You are not allowed to get document graft"
    delete:
      tags:
        - "grafts"
      summary: "Delete graft"
      operationId: "DeleteGraft"
      security:
        - basic: [ ]
      responses:
        "404":
          description: "Document or graft not found"
        "403":
          description: "You are not allowed to delete a document graft"
  /.users:
    put:
      tags:
        - "users"
      summary: "Create a user"
      operationId: "CreateUser"
      security:
        - basic: [ ]
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          schema:
            type: object
      responses:
        "403":
          description: "Operation forbidden. Creating user requires admin rights"
        "400":
          description: "User with this id already exists"
    post:
      tags:
        - "users"
      summary: "Request user registration"
      operationId: "RegisterUser"
      security:
        - basic: [ ]
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          schema:
            type: object
      responses:
        "400":
          description: "User with this id already exists. Or some info are missing"
    get:
      tags:
        - "users"
      summary: "List all users"
      operationId: "ListUsers"
      security:
        - basic: [ ]
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "403":
          description: "You are not allowed to get users list"
  /.users/{name}:
    parameters:
      - in: path
        name: name
        description: "Username"
        type: string
        required: true
    get:
      tags:
        - "users"
      summary: "Get a user info"
      operationId: "GetUserInfo"
      security:
        - basic: [ ]
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "403":
          description: "You are allowed to get this user info"
        "404":
          description: "The user does not exist"

securityDefinitions:
  basic:
    type: basic