// Code generated by entc, DO NOT EDIT.

package permission

const (
	// Label holds the string label denoting the permission type in the database.
	Label = "permission"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUser holds the string denoting the user field in the database.
	FieldUser = "user"
	// FieldData holds the string denoting the data field in the database.
	FieldData = "data"
	// FieldActionRead holds the string denoting the action_read field in the database.
	FieldActionRead = "action_read"
	// FieldActionWrite holds the string denoting the action_write field in the database.
	FieldActionWrite = "action_write"

	// EdgeSubject holds the string denoting the subject edge name in mutations.
	EdgeSubject = "subject"

	// Table holds the table name of the permission in the database.
	Table = "permissions"
	// SubjectTable is the table the holds the subject relation/edge.
	SubjectTable = "permissions"
	// SubjectInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	SubjectInverseTable = "users"
	// SubjectColumn is the table column denoting the subject relation/edge.
	SubjectColumn = "user_permissions"
)

// Columns holds all SQL columns for permission fields.
var Columns = []string{
	FieldID,
	FieldUser,
	FieldData,
	FieldActionRead,
	FieldActionWrite,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Permission type.
var ForeignKeys = []string{
	"user_permissions",
}

var (
	// UserValidator is a validator for the "user" field. It is called by the builders before save.
	UserValidator func(string) error
	// DataValidator is a validator for the "data" field. It is called by the builders before save.
	DataValidator func(string) error
)
