// Code generated by entc, DO NOT EDIT.

package access

const (
	// Label holds the string label denoting the access type in the database.
	Label = "access"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"

	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"

	// Table holds the table name of the access in the database.
	Table = "accesses"
	// OwnerTable is the table the holds the owner relation/edge.
	OwnerTable = "accesses"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "user_accesses"
)

// Columns holds all SQL columns for access fields.
var Columns = []string{
	FieldID,
	FieldCreator,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Access type.
var ForeignKeys = []string{
	"user_accesses",
}

var (
	// CreatorValidator is a validator for the "creator" field. It is called by the builders before save.
	CreatorValidator func(string) error
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
