syntax = "proto3";

option go_package = "github.com/omecodes/store/proto/gen/go;pb";

import "proto/se.proto";
import "proto/acl.proto";

message Collection {
  string id = 1;
  string label = 2;
  string description = 3;
  NumberIndex number_index = 4;
  repeated TextIndex text_indexes = 5;
  PropertiesIndex fields_index = 6;
  PathAccessRules action_authorized_users = 7;
  ACLConfig acl_config = 8;
}

message ACLConfig {
  string namespace = 1;
  string relation_with_created = 2;
}

message ObjectActionsUsers {
  SubjectSet view = 1;
  SubjectSet edit = 2;
  SubjectSet delete = 3;
}

message PathAccessRules {
  map<string, ObjectActionsUsers> access_rules = 1;
}

message AccessRules {
  string label = 1;
  string description = 2;
  string read_relation = 3;
  string edit_relation = 4;
  string delete_relation = 5;
}

message Header {
  string id = 1;
  string created_by = 2;
  int64 created_at = 3;
  int64 size = 4;
  map<string, ObjectActionsUsers> action_authorized_users_for_paths = 5;
}

message Object {
  Header header = 1;
  string data = 2;
}

message Patch {
  string object_id = 1;
  string at = 2;
  string data = 3;
}

message ObjectList {
  int64 offset = 1;
  uint32 total = 2;
  repeated Object objects = 3;
}

service Objects {
  rpc CreateCollection(CreateCollectionRequest) returns (CreateCollectionResponse);
  rpc GetCollection(GetCollectionRequest) returns (GetCollectionResponse);
  rpc ListCollections(ListCollectionsRequest) returns (ListCollectionsResponse);
  rpc DeleteCollection(DeleteCollectionRequest) returns (DeleteCollectionResponse);
  rpc PutObject(PutObjectRequest) returns (PutObjectResponse);
  rpc PatchObject(PatchObjectRequest) returns (PatchObjectResponse);
  rpc MoveObject(MoveObjectRequest) returns (MoveObjectResponse);
  rpc GetObject(GetObjectRequest) returns (GetObjectResponse);
  rpc DeleteObject(DeleteObjectRequest) returns (DeleteObjectResponse);
  rpc ObjectInfo(ObjectInfoRequest) returns (ObjectInfoResponse);
  rpc ListObjects(ListObjectsRequest) returns (stream Object);
  rpc SearchObjects(SearchObjectsRequest) returns (stream Object);
}

message CreateCollectionRequest {
  Collection collection = 1;
}
message CreateCollectionResponse {}

message GetCollectionRequest {
  string id = 1;
}
message GetCollectionResponse {
  Collection collection = 1;
}

message ListCollectionsRequest {}
message ListCollectionsResponse {
  repeated Collection collections = 1;
}

message DeleteCollectionRequest {
  string id = 1;
}
message DeleteCollectionResponse {}

message PutObjectRequest {
  string Collection = 1;
  Object object = 2;
  repeated TextIndex indexes = 3;
  PathAccessRules action_authorized_users = 4;
}
message PutObjectResponse {
  string object_id = 1;
}

message PatchObjectRequest{
  string Collection = 1;
  Patch patch = 2;
}
message PatchObjectResponse{}

message MoveObjectRequest {
  string source_collection = 1;
  string object_id = 2;
  string target_collection = 3;
  PathAccessRules access_security_rules = 4;
}
message MoveObjectResponse {}

message GetObjectRequest {
  string Collection = 1;
  string object_id = 2;
  string at = 3;
  bool info_only = 4;
}
message GetObjectResponse {
  Object object = 1;
}

message DeleteObjectRequest {
  string Collection = 1;
  string object_id = 2;
}
message DeleteObjectResponse {}

message ObjectInfoRequest {
  string Collection = 1;
  string object_id = 2;
}
message ObjectInfoResponse {
  Header header = 1;
}

message ListObjectsRequest {
  string collection = 1;
  int64 offset = 2;
  string at = 3;
}
message ListObjectsResponse {
  ObjectList result = 1;
}

message SearchObjectsRequest {
  string collection = 1;
  SearchQuery query = 2;
}